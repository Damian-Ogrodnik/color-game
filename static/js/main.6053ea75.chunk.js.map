{"version":3,"sources":["store.js","components/Levels/Levels.js","components/InfoModal/styles.js","components/InfoModal/InfoModal.js","components/withLoader/withLoader.js","components/Help/Help.js","components/Error/Error.js","components/Start/Start.js","components/Header/Header.js","components/Menu/Menu.js","components/StopWatch/StopWatch.js","components/ScoreboardModal/styles.js","components/ScoreboardClose/ScoreboardClose.js","axios/axiosSettings.js","components/ScoreboardInput/ScoreboardInput.js","components/ScoreboardInput/helpers.js","components/ScoreboardView/helpers.js","components/ScoreboardView/ScoreboardList/ScoreboardHeader.js","components/ScoreboardView/ScoreboardList/ScoreboardElement.js","components/Spinner/Spinner.js","components/ScoreboardView/ScoreboardList/ScoreboardList.js","components/ScoreboardView/ScoreboardView.js","components/ScoreboardModal/ScoreboardModal.js","components/Scoreboard/Scoreboard.js","components/SummaryNavigation/SummaryNavigation.js","components/SummaryTime/SummaryTime.js","components/SummaryHeading/SummaryHeading.js","components/Summary/Summary.js","components/Card/Card.js","components/Level/Level.js","data/data.js","components/Game/Game.js","components/Footer/Footer.js","App.js","index.js"],"names":["initialState","gameStarted","selectedLevel","startError","openModal","colorsArray","clicks","time","gameFinished","openScoreModal","openScoreModalView","nickname","store","createContext","Provider","Levels","useContext","dispatch","state","setLevel","value","target","type","isActive","level","className","onClick","e","customStyles","content","top","left","width","right","bottom","marginRight","transform","border","borderRadius","backgroundColor","Modal","setAppElement","WrappedComponent","InfoModal","isOpen","style","contentLabel","Help","Error","msg","class_Name","icon","color","Start","Header","classTitle","title","Menu","StopWatch","useState","minutes","setMinutes","seconds","setSeconds","miliSeconds","setMiliSeconds","useEffect","getSeconds","setTimeout","clearInterval","getMiliSeconds","ScoreboardClose","axios","create","baseURL","ScoreboardInput","setNickname","error","setError","saveNickname","preventDefault","length","post","then","catch","response","onSubmit","placeholder","onChange","handleChange","handleError","getScores","data","a","async","map","record","index","position","dataPositions","splice","i","forEach","name","arr","slice","ScoreboardHeader","ScoreboardElement","isBold","nick","id","min","sec","mili","toString","renderTime","Spinner","size","scoreboardListWithLoader","scores","scoresArray","push","renderScores","loading","props","console","log","ScoreboardView","setLoading","setScores","get","properScores","err","ScoreboardModal","selectedButton","Scoreboard","setSelectedButton","handleClick","SummaryNavigation","SummaryTime","SummaryHeading","Summary","Card","cardNum","colors","setColor","Math","floor","random","pushedArray","randomColor","background","Level","cardsNum","cardsArray","key","renderCards","easyData","mediumData","hardData","Game","arrayColors","Set","renderLevel","Footer","href","rel","App","ReactDOM","render","children","useReducer","action","document","getElementById"],"mappings":"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","file":"static/js/main.6053ea75.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  gameStarted: false,\r\n  selectedLevel: false,\r\n  startError: false,\r\n  openModal: false,\r\n  colorsArray: [],\r\n  clicks: 0,\r\n  time: {},\r\n  gameFinished: false,\r\n  openScoreModal: false,\r\n  openScoreModalView: false,\r\n  nickname: null\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"START_GAME\":\r\n        return { ...state, gameStarted: true };\r\n      case \"START_ERROR\":\r\n        return { ...state, startError: action.startError };\r\n      case \"OPEN_MODAL\":\r\n        return { ...state, openModal: action.openModal };\r\n      case \"SELECT_LEVEL\":\r\n        return { ...state, selectedLevel: action.selectedLevel };\r\n      case \"SET_COLORS_ARRAY\":\r\n        return { ...state, colorsArray: action.colorsArray };\r\n      case \"ADD_CLICK\":\r\n        return { ...state, clicks: state.clicks + 1 };\r\n      case \"FINISH_GAME\":\r\n        return { ...state, gameFinished: action.gameFinished };\r\n      case \"SET_TIME\":\r\n        return { ...state, time: action.time };\r\n      case \"OPEN_SCORE_MODAL\":\r\n        return { ...state, openScoreModal: action.openScoreModal };\r\n      case \"VALUE_NICKNAME\":\r\n        return { ...state, nickname: action.nickname };\r\n      case \"RESET_GAME\":\r\n        return {\r\n          gameStarted: false,\r\n          selectedLevel: false,\r\n          startError: false,\r\n          openModal: false,\r\n          colorsArray: [],\r\n          clicks: 0,\r\n          time: {},\r\n          gameFinished: false,\r\n          openScoreModal: false,\r\n          openScoreModalView: false,\r\n          nickname: null\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import React, { useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const Levels = () => {\r\n  const {\r\n    dispatch,\r\n    state: { selectedLevel }\r\n  } = useContext(store);\r\n\r\n  const setLevel = ({ target: { value } }) => {\r\n    dispatch({ type: \"SELECT_LEVEL\", selectedLevel: value });\r\n    dispatch({ type: \"START_ERROR\", startError: false });\r\n  };\r\n\r\n  const isActive = level => {\r\n    return level === selectedLevel ? \"selected\" : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu__difficulty\">\r\n      <h2>Select Level of Difficulty</h2>\r\n      <div className=\"menu__levels\">\r\n        <button\r\n          className={`btn btn__level--easy ${isActive(\"easy\")}`}\r\n          value={\"easy\"}\r\n          onClick={e => setLevel(e)}\r\n        >\r\n          EASY\r\n        </button>\r\n        <button\r\n          className={`btn btn__level--medium ${isActive(\"medium\")}`}\r\n          value={\"medium\"}\r\n          onClick={e => setLevel(e)}\r\n        >\r\n          MEDIUM\r\n        </button>\r\n        <button\r\n          className={`btn btn__level--hard ${isActive(\"hard\")}`}\r\n          value={\"hard\"}\r\n          onClick={e => setLevel(e)}\r\n        >\r\n          HARD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    border: \"0.25rem solid #470100\",\r\n    borderRadius: \"1rem\",\r\n    backgroundColor: \"#ad343e\"\r\n  }\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nimport { store } from \"../../store\";\r\nimport { customStyles } from \"./styles\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const InfoModal = () => {\r\n  const {\r\n    dispatch,\r\n    state: { openModal }\r\n  } = useContext(store);\r\n\r\n  return (\r\n    <Modal isOpen={openModal} style={customStyles} contentLabel=\"Example Modal\">\r\n      <div className=\"modal\">\r\n        <h2 className=\"modal__title\">Welcome to my color-game!</h2>\r\n        <p className=\"modal__text--body\">\r\n          I created this simple game to practise context state managment in\r\n          React. To start the game you have to choose the level of difficulty\r\n          and press the start button. Then you will see colorful blocks. Your\r\n          task is to set the same color on each block as quick as possible. You\r\n          can change color of a block by clicking on it.{\" \"}\r\n        </p>\r\n        <button\r\n          className=\"modal__btn\"\r\n          onClick={() => dispatch({ type: \"OPEN_MODAL\", openModal: false })}\r\n        >\r\n          GOT IT!\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Spinner } from \"../Spinner\";\r\nimport { Error } from \"../Error\";\r\n\r\nexport const withLoader = WrappedComponent => ({\r\n  loading,\r\n  error,\r\n  ...props\r\n}) => {\r\n  console.log(loading);\r\n\r\n  const renderComponent = () => {\r\n    if (loading) {\r\n      return <Spinner />;\r\n    } else if (error) {\r\n      return (\r\n        <Error\r\n          class_Name={\"error\"}\r\n          icon={true}\r\n          msg={\"Ooops... Something went wrong. Try again later.\"}\r\n        />\r\n      );\r\n    } else {\r\n      return <WrappedComponent {...props} />;\r\n    }\r\n  };\r\n\r\n  return renderComponent();\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nimport { InfoModal } from \"../InfoModal\";\r\n\r\nexport const Help = () => {\r\n  const { dispatch } = useContext(store);\r\n\r\n  const openModal = () => dispatch({ type: \"OPEN_MODAL\", openModal: true });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu__info\" onClick={() => openModal()}>\r\n        ?\r\n      </div>\r\n      <InfoModal />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdError } from \"react-icons/md\";\r\n\r\nexport const Error = ({ msg, class_Name, icon = false }) => {\r\n  return (\r\n    <IconContext.Provider value={{ className: `${class_Name}__icon` }}>\r\n      <div className={class_Name}>\r\n        {icon && <MdError value={{ color: \"black\" }} />}\r\n        {msg}\r\n      </div>\r\n    </IconContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nimport { Error } from \"../Error\";\r\n\r\nexport const Start = () => {\r\n  const {\r\n    dispatch,\r\n    state: { selectedLevel, startError }\r\n  } = useContext(store);\r\n\r\n  const startGame = () => {\r\n    return selectedLevel === false\r\n      ? dispatch({ type: \"START_ERROR\", startError: true })\r\n      : dispatch({ type: \"START_GAME\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {startError && (\r\n        <Error\r\n          msg={\"You have to select level of difficulty before start.\"}\r\n          class_Name={\"menu__error\"}\r\n        />\r\n      )}\r\n      <div className=\"menu__start\">\r\n        <button className=\"btn__start\" onClick={() => startGame()}>\r\n          START\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = ({ classTitle, title }) => {\r\n  return (\r\n    <div className={`${classTitle}__header`}>\r\n      <h1>{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Levels } from \"../Levels\";\r\nimport { Help } from \"../Help\";\r\nimport { Start } from \"../Start\";\r\nimport { Header } from \"../Header\";\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"menu__wrapper\">\r\n        <Header classTitle={\"menu\"} title={\"Color Game\"} />\r\n        <Levels />\r\n        <Start />\r\n      </div>\r\n      <Help />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const StopWatch = () => {\r\n  const {\r\n    dispatch,\r\n    state: { clicks }\r\n  } = useContext(store);\r\n\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [miliSeconds, setMiliSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let getSeconds = setTimeout(() => {\r\n      setSeconds(seconds + 1);\r\n    }, 1000);\r\n    return () => clearInterval(getSeconds);\r\n  }, [seconds]);\r\n\r\n  useEffect(() => {\r\n    let getMiliSeconds = setTimeout(() => {\r\n      miliSeconds > 1000 ? setMiliSeconds(0) : setMiliSeconds(miliSeconds + 1);\r\n    }, 1);\r\n    return () => clearInterval(getMiliSeconds);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"SET_TIME\", time: { minutes, seconds, miliSeconds } });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [clicks]);\r\n\r\n  const renderMinutes = () => {\r\n    if (minutes < 10) {\r\n      return `0${minutes}`;\r\n    } else return minutes;\r\n  };\r\n\r\n  const renderSeconds = () => {\r\n    if (seconds < 10) {\r\n      return `0${seconds}`;\r\n    } else if (seconds > 59) {\r\n      setSeconds(0);\r\n      setMinutes(minutes + 1);\r\n      return \"00\";\r\n    } else {\r\n      return seconds;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game__timer\">\r\n      <div className=\"game__timer--top\">\r\n        {renderMinutes()}:{renderSeconds()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    border: \"0.25rem solid #470100\",\r\n    borderRadius: \"1rem\",\r\n    backgroundColor: \"#ad343e\"\r\n  }\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nexport const ScoreboardClose = () => {\r\n  const { dispatch } = useContext(store);\r\n  return (\r\n    <button\r\n      className=\"modal__btn--close\"\r\n      onClick={() =>\r\n        dispatch({ type: \"OPEN_SCORE_MODAL\", openScoreModal: false })\r\n      }\r\n    >\r\n      X\r\n    </button>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst URL = `http://color-game-dogrodnik.herokuapp.com/`;\r\n\r\nexport default axios.create({\r\n  baseURL: URL\r\n});\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport axios from \"../../axios/axiosSettings\";\r\nimport { store } from \"../../store\";\r\n\r\nimport { handleError } from \"./helpers\";\r\n\r\nexport const ScoreboardInput = () => {\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const {\r\n    dispatch,\r\n    state: { time, selectedLevel }\r\n  } = useContext(store);\r\n\r\n  const handleChange = ({ target }) => {\r\n    setNickname(target.value);\r\n  };\r\n\r\n  const saveNickname = e => {\r\n    e.preventDefault();\r\n    const { minutes, seconds, miliSeconds } = time;\r\n    if (!nickname) {\r\n      setError(\"NO-NICKNAME\");\r\n    } else if (nickname.length < 4) {\r\n      setError(\"SHORT-NICKNAME\");\r\n    } else {\r\n      axios\r\n        .post(`/scores/${selectedLevel}/${nickname}`, {\r\n          minutes,\r\n          seconds,\r\n          miliSeconds\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: \"VALUE_NICKNAME\", nickname });\r\n        })\r\n        .catch(error => {\r\n          error.response\r\n            ? setError(\"NICKNAME-TAKEN\")\r\n            : setError(\"SERVER-ERROR\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scoreboard__input\">\r\n      <h2>Enter Your Nickname</h2>\r\n      <form onSubmit={e => saveNickname(e)}>\r\n        <label>\r\n          <input\r\n            placeholder=\"Your nickname\"\r\n            type=\"text\"\r\n            value={nickname}\r\n            onChange={e => handleChange(e)}\r\n          ></input>\r\n        </label>\r\n      </form>\r\n      {handleError(error)}\r\n      <button onClick={e => saveNickname(e)}>Save</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Error } from \"../Error\";\r\n\r\nexport const handleError = error => {\r\n  if (error === \"NO-NICKNAME\") {\r\n    return (\r\n      <Error\r\n        msg={\"You have to enter your nickname before save. \"}\r\n        class_Name={\"scoreboard__error\"}\r\n      />\r\n    );\r\n  } else if (error === \"SHORT-NICKNAME\") {\r\n    return (\r\n      <Error\r\n        msg={\"Your nickname is to short. \"}\r\n        class_Name={\"scoreboard__error\"}\r\n      />\r\n    );\r\n  } else if (error === \"NICKNAME-TAKEN\") {\r\n    return (\r\n      <Error\r\n        msg={\"This nickname is already taken. \"}\r\n        class_Name={\"scoreboard__error\"}\r\n      />\r\n    );\r\n  } else if (error === \"SERVER-ERROR\") {\r\n    return (\r\n      <Error\r\n        msg={\"Internal server error. Try again later... \"}\r\n        class_Name={\"scoreboard__error\"}\r\n      />\r\n    );\r\n  }\r\n};\r\n","export const renderTime = (minutes, seconds, miliSeconds) => {\r\n  let min, sec, mili;\r\n  minutes ? (min = minutes.toString()) : (min = \"0\");\r\n  seconds ? (sec = seconds.toString()) : (sec = \"0\");\r\n  miliSeconds ? (mili = miliSeconds.toString()) : (mili = \"0\");\r\n\r\n  min.length === 1 ? (min = `0${minutes}`) : (min = minutes);\r\n  sec.length === 1 ? (sec = `0${seconds}`) : (sec = seconds);\r\n  mili.length === 1\r\n    ? (mili = `00${miliSeconds}`)\r\n    : mili.length === 2\r\n    ? (mili = `0${miliSeconds}`)\r\n    : (mili = miliSeconds);\r\n\r\n  return `${min}:${sec}:${mili}`;\r\n};\r\n\r\nexport const getScores = async (data, nickname) => {\r\n  let dataPositions = await data.map((record, index) => {\r\n    return { ...record, position: index + 1 };\r\n  });\r\n\r\n  let arr;\r\n  if (!nickname) return dataPositions.splice(0, 10);\r\n  let i = 0;\r\n  await dataPositions.forEach(record => {\r\n    i++;\r\n    if (record.name === nickname) {\r\n      if (i < 10) {\r\n        return (arr = dataPositions.slice(0, 10));\r\n      } else {\r\n        return (arr = dataPositions.slice(i - 10, i));\r\n      }\r\n    }\r\n  });\r\n  return arr;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ScoreboardHeader = () => {\r\n  return (\r\n    <li className=\"scoreboard__list score score__header\">\r\n      <div className=\"score__position\">Position</div>\r\n      <div className=\"score__name\">Nickname</div>\r\n      <div className=\"score__time\">Result</div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ScoreboardHeader;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { store } from \"../../../store\";\r\n\r\nimport { renderTime } from \"../helpers\";\r\n\r\nexport const ScoreboardElement = ({\r\n  data: {\r\n    name,\r\n    time: { minutes, seconds, miliSeconds },\r\n    position\r\n  }\r\n}) => {\r\n  const {\r\n    state: { nickname }\r\n  } = useContext(store);\r\n\r\n  const isBold = (nick, id) => {\r\n    if (nick === id) return \"bold\";\r\n  };\r\n\r\n  return (\r\n    <li className=\"scoreboard__list score\">\r\n      <div className={`score__position ${isBold(nickname, name)}`}>\r\n        {position}.\r\n      </div>\r\n      <div className={`score__name ${isBold(nickname, name)}`}>{name}</div>\r\n      <div className={`score__time ${isBold(nickname, name)}`}>\r\n        {renderTime(minutes, seconds, miliSeconds)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BounceLoader } from \"react-spinners\";\r\n\r\nexport const Spinner = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <BounceLoader size={150} color={\"#e0dcce\"} />\r\n      <p>Loading...</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ScoreboardHeader } from \"./ScoreboardHeader\";\r\nimport { ScoreboardElement } from \"./ScoreboardElement\";\r\n\r\nimport { withLoader } from \"../../withLoader\";\r\n\r\nconst ScoreboardList = ({ scores }) => {\r\n  const renderScores = () => {\r\n    const scoresArray = [<ScoreboardHeader />];\r\n\r\n    scores.map(data => {\r\n      return scoresArray.push(<ScoreboardElement data={data} />);\r\n    });\r\n\r\n    return scoresArray;\r\n  };\r\n\r\n  return <>{renderScores()}</>;\r\n};\r\n\r\nconst scoreboardListWithLoader = withLoader(ScoreboardList);\r\n\r\nexport { scoreboardListWithLoader as ScoreboardList };\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"../../axios/axiosSettings\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nimport { getScores } from \"./helpers\";\r\nimport { ScoreboardList } from \"./ScoreboardList/ScoreboardList\";\r\n\r\nexport const ScoreboardView = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [scores, setScores] = useState([]);\r\n  const {\r\n    state: { nickname, selectedLevel }\r\n  } = useContext(store);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(`/scores/${selectedLevel}`)\r\n      .then(async ({ data }) => {\r\n        let properScores = await getScores(data, nickname);\r\n        setScores(properScores);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        setError(true);\r\n      });\r\n  }, [nickname, selectedLevel]);\r\n\r\n  return (\r\n    <div className=\"scoreboard__list\">\r\n      <ScoreboardList loading={loading} scores={scores} error={error} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Modal from \"react-modal\";\r\n\r\nimport { store } from \"../../store\";\r\nimport { customStyles } from \"./styles\";\r\n\r\nimport { ScoreboardClose } from \"../ScoreboardClose\";\r\nimport { ScoreboardInput } from \"../ScoreboardInput\";\r\nimport { ScoreboardView } from \"../ScoreboardView\";\r\n\r\nexport const ScoreboardModal = props => {\r\n  const {\r\n    state: { openScoreModal, nickname }\r\n  } = useContext(store);\r\n\r\n  const renderView = () => {\r\n    if (props.selectedButton === \"scores\" || nickname) {\r\n      return <ScoreboardView />;\r\n    } else {\r\n      return <ScoreboardInput />;\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={openScoreModal}\r\n      style={customStyles}\r\n      contentLabel=\"Scoreboard Modal\"\r\n    >\r\n      <div className=\"modal\">\r\n        <ScoreboardClose />\r\n        {renderView()}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nimport { ScoreboardModal } from \"../ScoreboardModal\";\r\n\r\nexport const Scoreboard = () => {\r\n  const [selectedButton, setSelectedButton] = useState(\"\");\r\n  const { dispatch } = useContext(store);\r\n\r\n  const handleClick = ({ target }) => {\r\n    if (target.value === \"post\") {\r\n      dispatch({ type: \"OPEN_SCORE_MODAL\", openScoreModal: true });\r\n      setSelectedButton(\"post\");\r\n    } else {\r\n      dispatch({ type: \"OPEN_SCORE_MODAL\", openScoreModal: true });\r\n      setSelectedButton(\"scores\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        value={\"scores\"}\r\n        onClick={e => {\r\n          handleClick(e);\r\n        }}\r\n      >\r\n        SCORES\r\n      </button>\r\n      <button value={\"post\"} onClick={e => handleClick(e)}>\r\n        POST\r\n      </button>\r\n      <ScoreboardModal selectedButton={selectedButton} />\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nimport { Scoreboard } from \"../Scoreboard\";\r\n\r\nexport const SummaryNavigation = () => {\r\n  const { dispatch } = useContext(store);\r\n\r\n  return (\r\n    <div className=\"summary__navigation\">\r\n      <button onClick={() => dispatch({ type: \"RESET_GAME\" })}>\r\n        TRY AGAIN\r\n      </button>\r\n      <Scoreboard />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nexport const SummaryTime = () => {\r\n  const {\r\n    state: { time }\r\n  } = useContext(store);\r\n\r\n  const renderTime = () => {\r\n    let { minutes, seconds, miliSeconds } = time;\r\n    if (minutes < 10) minutes = `0${minutes}`;\r\n    if (seconds < 10) seconds = `0${seconds}`;\r\n    return `${minutes}:${seconds}:${miliSeconds}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"summary__time\">\r\n      <div className=\"time__heading\">Your Time</div>\r\n      <div className=\"time__timer\">{renderTime()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryTime;\r\n","import React from \"react\";\r\n\r\nexport const SummaryHeading = () => {\r\n  return (\r\n    <div className=\"summary__heading\">\r\n      <h1>Congratulations!</h1>\r\n      <h2>You Won!</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { SummaryNavigation } from \"../SummaryNavigation\";\r\nimport { SummaryTime } from \"../SummaryTime\";\r\nimport { SummaryHeading } from \"../SummaryHeading\";\r\n\r\nexport const Summary = () => {\r\n  return (\r\n    <div className=\"summary\">\r\n      <div className=\"summary__wrapper\">\r\n        <SummaryHeading />\r\n        <SummaryTime />\r\n        <SummaryNavigation />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const Card = ({ cardNum, colors }) => {\r\n  const {\r\n    dispatch,\r\n    state: { colorsArray }\r\n  } = useContext(store);\r\n\r\n  const [color, setColor] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setColor(colors[Math.floor(Math.random() * colors.length)]);\r\n  }, [colors]);\r\n\r\n  useEffect(() => {\r\n    if (color !== \"\") {\r\n      const pushedArray = colorsArray;\r\n      pushedArray[cardNum - 1]\r\n        ? (pushedArray[cardNum - 1] = { id: cardNum, color: color })\r\n        : pushedArray.push({ id: cardNum, color: color });\r\n      dispatch({ type: \"SET_COLORS_ARRAY\", colorsArray: pushedArray });\r\n    }\r\n  }, [cardNum, color, colorsArray, dispatch]);\r\n\r\n  const randomColor = target => {\r\n    const color = colors[Math.floor(Math.random() * colors.length)];\r\n    color === target.style.backgroundColor\r\n      ? randomColor(target)\r\n      : setColor(color);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={e => {\r\n        randomColor(e.target);\r\n        dispatch({ type: \"ADD_CLICK\" });\r\n      }}\r\n      style={{ background: color }}\r\n      className={`card card__card${cardNum}`}\r\n    ></div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../Card\";\r\n\r\nexport const Level = ({ data, level }) => {\r\n  const renderCards = () => {\r\n    const { cardsNum, colors } = data;\r\n    const cardsArray = [];\r\n    for (let i = 1; i <= cardsNum; i++) {\r\n      cardsArray.push(<Card key={i} cardNum={i} colors={colors} />);\r\n    }\r\n    return cardsArray;\r\n  };\r\n  return <div className={`level game__${level}`}>{renderCards()}</div>;\r\n};\r\n","export const easyData = {\r\n  cardsNum: 6,\r\n  colors: [\"darkred\", \"darkblue\", \"darkgreen\", \"gold\", \"darkorange\"]\r\n};\r\n\r\nexport const mediumData = {\r\n  cardsNum: 10,\r\n  colors: [\"darkred\", \"darkblue\", \"darkgreen\", \"gold\", \"darkorange\"]\r\n};\r\n\r\nexport const hardData = {\r\n  cardsNum: 20,\r\n  colors: [\"darkred\", \"darkblue\", \"darkgreen\", \"gold\", \"darkorange\"]\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { store } from \"../../store\";\r\n\r\nimport { Error } from \"../Error\";\r\nimport { StopWatch } from \"../StopWatch\";\r\nimport { Summary } from \"../Summary\";\r\nimport { Level } from \"../Level\";\r\n\r\nimport { easyData, mediumData, hardData } from \"../../data/data\";\r\n\r\nexport const Game = () => {\r\n  const {\r\n    dispatch,\r\n    state: { selectedLevel, colorsArray, clicks, gameFinished }\r\n  } = useContext(store);\r\n\r\n  useEffect(() => {\r\n    const arrayColors = [];\r\n    if (colorsArray.length) {\r\n      colorsArray.forEach(({ color }) => {\r\n        arrayColors.push(color);\r\n      });\r\n      const collorsSet = new Set(arrayColors);\r\n      if (collorsSet.size === 1)\r\n        dispatch({ type: \"FINISH_GAME\", gameFinished: true });\r\n    }\r\n  }, [clicks, colorsArray, dispatch]);\r\n\r\n  const renderLevel = () => {\r\n    switch (selectedLevel) {\r\n      case \"easy\":\r\n        return <Level data={easyData} level={\"easy\"} />;\r\n      case \"medium\":\r\n        return <Level data={mediumData} level={\"medium\"} />;\r\n      case \"hard\":\r\n        return <Level data={hardData} level={\"hard\"} />;\r\n      default:\r\n        return <Error msg={\"Something went wrong...\"} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {gameFinished ? (\r\n        <Summary />\r\n      ) : (\r\n        <div className=\"game\">\r\n          <StopWatch />\r\n          {renderLevel()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__wrapper\">\r\n        <a\r\n          href=\"https://github.com/dogrodnik\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          © 2020 DOGRODNIK\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport \"./css/main.css\";\r\n\r\nimport { store } from \"./store\";\r\n\r\nimport { Menu } from \"./components/Menu\";\r\nimport { Game } from \"./components/Game/Game\";\r\nimport { Footer } from \"./components/Footer\";\r\n\r\nconst App = () => {\r\n  const {\r\n    state: { gameStarted }\r\n  } = useContext(store);\r\n\r\n  return (\r\n    <>\r\n      {gameStarted ? <Game /> : <Menu />}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { StateProvider } from \"./store.js\";\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}