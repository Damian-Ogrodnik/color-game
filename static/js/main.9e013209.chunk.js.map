{"version":3,"sources":["store.js","components/Levels/Levels.js","components/Error/Error.js","components/InfoModal/InfoModal.js","components/Menu/Menu.js","components/StopWatch/StopWatch.js","components/Summary/Summary.js","components/Card/Card.js","components/Level/Level.js","data/data.js","components/Game/Game.js","App.js","index.js"],"names":["initialState","gameStarted","selectedLevel","startError","openModal","colorsArray","clicks","time","gameFinished","store","createContext","Provider","Levels","dispatch","useContext","state","setLevel","value","target","type","isActive","level","className","onClick","e","Error","msg","class_Name","customStyles","content","top","left","width","right","bottom","marginRight","transform","border","borderRadius","backgroundColor","Modal","setAppElement","InfoModal","isOpen","style","contentLabel","Menu","StopWatch","useState","minutes","setMinutes","seconds","setSeconds","miliSeconds","setMiliSeconds","useEffect","miliSec","setTimeout","clearInterval","Summary","renderTime","Card","cardNum","colors","color","setColor","Math","floor","random","length","pushedArray","id","push","randomColor","background","Level","data","cardsNum","cardsArray","i","key","renderCards","easyData","mediumData","hardData","Game","checkColors","arrayColors","forEach","Set","size","renderLevel","App","ReactDOM","render","children","useReducer","action","document","getElementById"],"mappings":"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","file":"static/js/main.9e013209.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  gameStarted: false,\r\n  selectedLevel: false,\r\n  startError: false,\r\n  openModal: false,\r\n  colorsArray: [],\r\n  clicks: 0,\r\n  time: {},\r\n  gameFinished: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"START_GAME\":\r\n        return { ...state, gameStarted: true };\r\n      case \"START_ERROR\":\r\n        return { ...state, startError: action.startError };\r\n      case \"OPEN_MODAL\":\r\n        return { ...state, openModal: action.openModal };\r\n      case \"SELECT_LEVEL\":\r\n        return { ...state, selectedLevel: action.selectedLevel };\r\n      case \"SET_COLORS_ARRAY\":\r\n        return { ...state, colorsArray: action.colorsArray };\r\n      case \"ADD_CLICK\":\r\n        return { ...state, clicks: state.clicks + 1 };\r\n      case \"FINISH_GAME\":\r\n        return { ...state, gameFinished: action.gameFinished };\r\n      case \"SET_TIME\":\r\n        return { ...state, time: action.time };\r\n      case \"RESET_GAME\":\r\n        return {\r\n          gameStarted: false,\r\n          selectedLevel: false,\r\n          startError: false,\r\n          openModal: false,\r\n          colorsArray: [],\r\n          clicks: 0,\r\n          time: 0,\r\n          gameFinished: false\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import React, { useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const Levels = () => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { selectedLevel }\r\n  } = useContext(store);\r\n\r\n  const setLevel = ({ target: { value } }) => {\r\n    dispatch({ type: \"SELECT_LEVEL\", selectedLevel: value });\r\n    dispatch({ type: \"START_ERROR\", startError: false });\r\n  };\r\n\r\n  const isActive = level => {\r\n    return level === selectedLevel ? \"selected\" : \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu__difficulty\">\r\n      <h2>Select Level of Difficulty</h2>\r\n      <div className=\"menu__levels\">\r\n        <button\r\n          className={`btn btn__level--easy ${isActive(\"EASY\")}`}\r\n          value={\"EASY\"}\r\n          onClick={e => setLevel(e)}\r\n        >\r\n          EASY\r\n        </button>\r\n        <button\r\n          className={`btn btn__level--medium ${isActive(\"MEDIUM\")}`}\r\n          value={\"MEDIUM\"}\r\n          onClick={e => setLevel(e)}\r\n        >\r\n          MEDIUM\r\n        </button>\r\n        <button\r\n          className={`btn btn__level--hard ${isActive(\"HARD\")}`}\r\n          value={\"HARD\"}\r\n          onClick={e => setLevel(e)}\r\n        >\r\n          HARD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Error = ({ msg, class_Name }) => {\r\n  return <div className={class_Name}>{msg}</div>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { store } from \"../../store\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    width: \"80%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    border: \"0.25rem solid #470100\",\r\n    borderRadius: \"1rem\",\r\n    backgroundColor: \"#ad343e\"\r\n  }\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nexport const InfoModal = () => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { openModal }\r\n  } = useContext(store);\r\n\r\n  return (\r\n    <Modal isOpen={openModal} style={customStyles} contentLabel=\"Example Modal\">\r\n      <div className=\"modal\">\r\n        <h2 className=\"modal__title\">Welcome to my color-game!</h2>\r\n        <p className=\"modal__text--body\">\r\n          I created this simple game to practise context state managment in\r\n          React. To start the game you have to choose the level of difficulty\r\n          and press the start button. Then you will see colorful blocks. Your\r\n          task is to set the same color on each block as quick as possible. You\r\n          can change color of a block by clicking on it.{\" \"}\r\n        </p>\r\n        <button\r\n          className=\"modal__btn\"\r\n          onClick={() => dispatch({ type: \"OPEN_MODAL\", openModal: false })}\r\n        >\r\n          GOT IT!\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\nimport { Levels } from \"../Levels\";\r\nimport { Error } from \"../Error\";\r\nimport { InfoModal } from \"../InfoModal\";\r\n\r\nexport const Menu = () => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { selectedLevel, startError }\r\n  } = useContext(store);\r\n\r\n  const startGame = () => {\r\n    return selectedLevel === false\r\n      ? dispatch({ type: \"START_ERROR\", startError: true })\r\n      : dispatch({ type: \"START_GAME\" });\r\n  };\r\n\r\n  const renderError = () => {\r\n    return (\r\n      startError && (\r\n        <Error\r\n          msg={\"You have to select level of difficulty before start.\"}\r\n          class_Name={\"menu__error\"}\r\n        />\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"menu__wrapper\">\r\n        <div className=\"menu__header\">\r\n          <h1>Color Game</h1>\r\n        </div>\r\n        <Levels />\r\n        {renderError()}\r\n        <div className=\"menu__start\">\r\n          <button className=\"btn__start\" onClick={() => startGame()}>\r\n            START\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"menu__info\"\r\n        onClick={() => dispatch({ type: \"OPEN_MODAL\", openModal: true })}\r\n      >\r\n        ?\r\n      </div>\r\n      <InfoModal />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const StopWatch = () => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { clicks }\r\n  } = useContext(store);\r\n\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [miliSeconds, setMiliSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let miliSec = setTimeout(() => {\r\n      setMiliSeconds(miliSeconds + 10);\r\n      // dispatch({ type: \"SET_TIME\", minutes, seconds, miliSeconds });\r\n    }, 10);\r\n    return () => clearInterval(miliSec);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"SET_TIME\", time: { minutes, seconds, miliSeconds } });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [clicks]);\r\n\r\n  const renderMinutes = () => {\r\n    if (minutes < 10) {\r\n      return `0${minutes}`;\r\n    } else return minutes;\r\n  };\r\n\r\n  const renderSeconds = () => {\r\n    if (miliSeconds > 1000) {\r\n      setMiliSeconds(0);\r\n      setSeconds(seconds + 1);\r\n    }\r\n    if (seconds < 10) {\r\n      return `0${seconds}`;\r\n    } else if (seconds > 59) {\r\n      setSeconds(0);\r\n      setMinutes(minutes + 1);\r\n      return \"00\";\r\n    } else {\r\n      return seconds;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game__timer\">\r\n      <div className=\"game__timer--top\">\r\n        {renderMinutes()}:{renderSeconds()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const Summary = () => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { time }\r\n  } = useContext(store);\r\n\r\n  const renderTime = () => {\r\n    let { minutes, seconds, miliSeconds } = time;\r\n    if (minutes < 10) minutes = `0${minutes}`;\r\n    if (seconds < 10) seconds = `0${seconds}`;\r\n    return `${minutes}:${seconds}:${miliSeconds}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"summary\">\r\n      <div className=\"summary__wrapper\">\r\n        <div className=\"summary__heading\">\r\n          <h1>Congratulations!</h1>\r\n          <h2>You Won!</h2>\r\n        </div>\r\n        <div className=\"summary__time\">\r\n          <div className=\"time__heading\">Your Time</div>\r\n          <div className=\"time__timer\">{renderTime()}</div>\r\n        </div>\r\n        <button onClick={() => dispatch({ type: \"RESET_GAME\" })}>\r\n          TRY AGAIN\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { store } from \"../../store\";\r\n\r\nexport const Card = ({ cardNum, colors }) => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { colorsArray }\r\n  } = useContext(store);\r\n  const [color, setColor] = useState(\"\");\r\n  useEffect(() => {\r\n    setColor(colors[Math.floor(Math.random() * colors.length)]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (color !== \"\") {\r\n      const pushedArray = colorsArray;\r\n      if (pushedArray[cardNum - 1]) {\r\n        pushedArray[cardNum - 1] = { id: cardNum, color: color };\r\n      } else {\r\n        pushedArray.push({ id: cardNum, color: color });\r\n      }\r\n      dispatch({ type: \"SET_COLORS_ARRAY\", colorsArray: pushedArray });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [color]);\r\n\r\n  const randomColor = target => {\r\n    const color = colors[Math.floor(Math.random() * colors.length)];\r\n    color === target.style.backgroundColor\r\n      ? randomColor(target)\r\n      : setColor(color);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={e => {\r\n        randomColor(e.target);\r\n        dispatch({ type: \"ADD_CLICK\" });\r\n      }}\r\n      style={{ background: color }}\r\n      className={`card card__card${cardNum}`}\r\n    ></div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../Card\";\r\n\r\nexport const Level = ({ data, level }) => {\r\n  const renderCards = () => {\r\n    const { cardsNum, colors } = data;\r\n    const cardsArray = [];\r\n    for (let i = 1; i <= cardsNum; i++) {\r\n      cardsArray.push(<Card key={i} cardNum={i} colors={colors} />);\r\n    }\r\n    return cardsArray;\r\n  };\r\n  return <div className={`level game__${level}`}>{renderCards()}</div>;\r\n};\r\n","export const easyData = {\r\n  cardsNum: 6,\r\n  colors: [\"darkred\", \"darkblue\", \"darkgreen\", \"gold\", \"darkorange\"]\r\n};\r\n\r\nexport const mediumData = {\r\n  cardsNum: 10,\r\n  colors: [\"darkred\", \"darkblue\", \"darkgreen\", \"gold\", \"darkorange\"]\r\n};\r\n\r\nexport const hardData = {\r\n  cardsNum: 20,\r\n  colors: [\"darkred\", \"darkblue\", \"darkgreen\", \"gold\", \"darkorange\"]\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { store } from \"../../store\";\r\nimport { Error } from \"../Error\";\r\nimport { StopWatch } from \"../StopWatch\";\r\nimport { Summary } from \"../Summary\";\r\nimport { Level } from \"../Level\";\r\nimport { easyData, mediumData, hardData } from \"../../data/data\";\r\n\r\nexport const Game = () => {\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n  const {\r\n    state: { selectedLevel, colorsArray, clicks, gameFinished }\r\n  } = useContext(store);\r\n  useEffect(() => {\r\n    checkColors();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [clicks]);\r\n\r\n  const checkColors = () => {\r\n    const arrayColors = [];\r\n    if (colorsArray.length) {\r\n      colorsArray.forEach(({ color }) => {\r\n        arrayColors.push(color);\r\n      });\r\n      const collorsSet = new Set(arrayColors);\r\n      if (collorsSet.size === 1)\r\n        dispatch({ type: \"FINISH_GAME\", gameFinished: true });\r\n    }\r\n  };\r\n\r\n  const renderLevel = () => {\r\n    switch (selectedLevel) {\r\n      case \"EASY\":\r\n        return <Level data={easyData} level={\"easy\"} />;\r\n      case \"MEDIUM\":\r\n        return <Level data={mediumData} level={\"medium\"} />;\r\n      case \"HARD\":\r\n        return <Level data={hardData} level={\"hard\"} />;\r\n      default:\r\n        return <Error msg={\"Something went wrong...\"} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {gameFinished ? (\r\n        <Summary />\r\n      ) : (\r\n        <div className=\"game\">\r\n          <StopWatch />\r\n          {renderLevel()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\nimport \"./css/main.css\";\nimport { store } from \"./store\";\nimport { Menu } from \"./components/Menu\";\nimport { Game } from \"./components/Game/Game\";\n\nconst App = () => {\n  const {\n    state: { gameStarted }\n  } = useContext(store);\n\n  return <>{gameStarted ? <Game /> : <Menu />}</>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { StateProvider } from \"./store.js\";\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}